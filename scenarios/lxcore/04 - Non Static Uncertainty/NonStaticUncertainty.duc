package simple.real

class Building {
    Room rooms[0..*]
}

class Room {
    double sensorTemperature
    
    
    /**
        UReal temperature(precision: accuracy(value,sensorTemperature))
        UReal temperature = (_,accuracy(_,sensorTemperature))  <-- more this
    **/
    Gaussian<double> temperature {
        /**
            Defines how the uncertainty is computed when a new value is received
            Assumption: sensorTemperature is received at the same time
        **/
        uncertainty = (self.value, accuracy(self.value, self.parent.sensorTemperature))

        // Source: http://www.eenewseurope.com/sites/default/files/images/01-edit-photos-uploads/2011/2011-06-june/2011-06-24-mlx90614.jpg

        /**
            Need improvement
            The language should allow easy definition of such a matrix
            The access should mot be manually implemented by the developer

            Suggestion: used named dimension
        **/
        const double[][] accuracyMatrix = {{-40, -20, 50,70,150}
                                           -40=>{4,4,4,4,4},
                                           -20=>{4,4,3,3,3},
                                           0=>{4,3,2,2,2},
                                           30=>{3,2,1,1,2},
                                           50=>{2,1,0.5,1,2},
                                           80=>{3,1,1,2,3},
                                           100=>{3,3,2,3,4}};

         op double accuracy(double ambientTemperature, double objectTemperature) { <-- utility function, outside of the definition of the temperature attribute
                 int ligneIdx, colonneIdx;
                 if(ambientTemperature < -40) {
                     throw new RuntimeException("Unknown");
                 } else if(ambientTemperature < -20) {
                     colonneIdx = 0;
                 } else if(ambientTemperature < 0) {
                     colonneIdx = 1;
                 } else if(ambientTemperature < 50) {
                     colonneIdx = 2;
                 } else if(ambientTemperature < 100) {
                     colonneIdx = 3;
                 } else if(ambientTemperature < 125) {
                     colonneIdx = 4;
                 } else {
                     throw new RuntimeException("Unknown");
                 }

                 if(objectTemperature < -70) {
                     throw new RuntimeException("Unknown");
                 } else if(objectTemperature < -40) {
                     ligneIdx = 6;
                 } else if(objectTemperature < 0) {
                     ligneIdx = 5;
                 } else if(objectTemperature < 60) {
                     ligneIdx = 4;
                 } else if(objectTemperature < 120) {
                     ligneIdx = 3;
                 } else if(objectTemperature < 180) {
                     ligneIdx = 2;
                 } else if(objectTemperature < 240) {
                     ligneIdx = 1;
                 } else if(objectTemperature < 380) {
                     ligneIdx = 0;
                 } else {
                     throw new RuntimeException("Unknown");
                 }
                 return accuracyMatrix[ligneIdx][colonneIdx];
             }
    }
}
