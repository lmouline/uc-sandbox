package simple.propagation

class Building {
    Room rooms[0..*]
    boolean heatingSystemOn

    derived double avgTemp get {
        double sum = 0
        int nbCorrectValue = 0

        Time current = CurrentTime()

        for(Room r: rooms) {
            if(r.tempValid()) {
                nbCorrectValue++
                sum += r.temperature
            }
        }

        if(nbCorrectValue > 0.9*rooms.length) {
            return sum / nbCorrectValue;
        }

        return -273.15 //not possible to compute the value, absolute zero
    }

    derived Time avgTempTimeValidity get {
        Time current = CurrentTime()
        Time min = r[0].temperatureTimeValidity

        for(Room r: rooms) {
            if(r.tempValid()) {
                if(r.temperatureTimeValidity < min) {
                    min = r.temperatureTimeValidity
                }
            }
        }
    }

    op void checkPanicAlarm() {
        if(avgTemp != -273.15) {
            if(avgTemp < 0 || avgTemp > 35) {
                panicAlarm()
            }
        }
    }
}

class Room {
    double temperature
    Time temperatureTimeStamp
    Time temperatureTimeValidity

    op boolean tempValid(Time current) {
         if(current <= temperatureTimeStamp+temperatureTimeValidity) {
            return true;
         }
         return false;
    }
}







